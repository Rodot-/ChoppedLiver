#!/usr/bin/env python3

'''
reproject_image

Description: Remove Cosmic Rays from and Image

Author: John O'Brien

Created: 2019-04-01
Modified: 2019-04-04
Version: 0.0

'''
import sys
import getopt

import numpy as np
from astropy.io import fits

try: # use the faster one if it's installed
	from lacosmicx import lacosmicx as lacosmic
	lax = True
except ImportError: # otherwise, fall back to the one you install with pip
	from lacosmic import lacosmic
	lax = False

def remove_cosmics(image, sigclip=4.5, sigfrac=0.4, objlim=3, 
							niter=4, saturation=50000, footprint=None):
	'''remove cosmic rays with lacosmic'''

	if footprint is not None:
		with fits.open(footprint) as m:
			mask = ~np.array(m[0].data).astype(bool)

	with fits.open(image) as f:

		data = f[0].data
		header = f[0].header

		gain = header['GAIN']
		rn = header['READNOIS']

		sat_mask = data > saturation

		if footprint is not None:
			mask |= sat_mask
		else:
			mask = sat_mask

	if lax:
		footprint, clean = lacosmic(np.ascontiguousarray(data).astype('f4'), 
							objlim=objlim, sigclip=sigclip, 
							sigfrac=sigfrac, readnoise=rn, gain=gain, 
							niter=niter, inmask=np.ascontiguousarray(mask).astype(np.uint8))
	else:
		clean, footprint = lacosmic(data, objlim, sigclip, sigfrac, 
							readnoise=rn, effective_gain=gain, 
							maxiter=niter, mask=mask)

	out = fits.PrimaryHDU(data=clean, header=header)
	mask = fits.PrimaryHDU(data=footprint.astype(np.uint8), header=header)

	return out, mask

def write_out(hdu, filename):
	''' Helper function for writing fits files'''

	hdu.writeto(filename, overwrite=True)

def usage():

	msg = """remove_cosmics -o OUTFILE [-m MASKFILE -f FOOTPRINTFILE] IMAGEFILE
	
-o OUTFILE            Name of Output File
-f FOOTPRINTFILE      Name of Footprint File Specifying Masked Region
-m MASKFILE           Name of Output Cosmics Mask File
-h                    This Message
"""
	print(msg)
	exit(0)

def main():

	opts, args = getopt.getopt(sys.argv[1:], 'f:o:m:eh')
	opts = dict(opts)

	if '-h' in opts:
		usage()

	assert len(args), "Please Provide Image(s) to Reproject"
	assert '-o' in opts, "Please Provide and Output Filename (-o OUT)"

	imagename = args[0]
	outfile = opts['-o']

	footprint = None
	if '-f' in opts:
		footprint = opts['-f']

	image, mask = remove_cosmics(imagename, footprint=footprint)
	write_out(image, outfile)
	
	if '-m' in opts:
		maskfile = opts['-m']
		write_out(mask, maskfile)
	
if __name__ == '__main__':

	main()	


