#!/usr/bin/env python3


import sys
from multiprocessing.pool import ThreadPool as Pool

from astropy.io import fits
import numpy as np


def percent(f):

	return ("{:<03.2%}".format(f)).zfill(6)

def get_params(filename):
	im = np.array(fits.getdata(filename, 0)).ravel()
	total = len(im)
	nanmask = np.isnan(im)
	nans = np.sum(nanmask)
	nansp = percent(nans/total)
	im = im[~nanmask]
	negs = np.sum(im < 0)
	negsp = percent(negs/total)
	zeros = np.sum(im == 0)
	zerosp = percent(zeros/total)
	infs = np.sum(np.isinf(im))
	infsp = percent(infs/total)
	filename = filename[filename.rfind('/')+1:]
	return f'{filename:<28} {nans:<7d} {nansp:<6} {zeros:<7d} {zerosp:<6} {negs:<7d} {negsp:<6} {infs:<7d} {infsp:<6}'
	

P = Pool(16)
print('{0:<28} {1:<14} {2:<14} {3:<14} {4:<14}'.format('Filename','NaNs','Zeros','Negatives','Infinities'))
for i in P.imap(get_params, sys.argv[1:]):
	print(i)

