#!/usr/bin/env python3

'''
reproject_image

Description: Reproject a fits image to the WCS frame of a template image

Author: John O'Brien

Created: 2019-03-29
Modified: 2019-03-29
Version: 0.0

'''
import sys
import getopt

import numpy as np
from astropy.io import fits
from astropy.wcs import WCS
from reproject import reproject_exact, reproject_interp


def reproject(template, image, exact=False):
	'''reproject an image to the frame
	of the template image
	'''

	reprojector = reproject_interp
	if exact: # use the slower but more accuate flux conserving method
		reprojector = reproject_exact

	with fits.open(image) as f:

		header = fits.getheader(template)
		frame = WCS(header) # template coordinate information
		array, footprint = reprojector(f[0], frame, shape_out=f[0].data.shape)
		new_header = f[0].header # copy old header
		new_header.update(frame.to_header()) # new wcs info

	out = fits.PrimaryHDU(data=array, header=new_header)
	mask = fits.PrimaryHDU(data=footprint, header=new_header)

	return out, mask

def write_out(hdu, filename):
	''' Helper function for writing fits files'''

	hdu.writeto(filename, overwrite=True)

def usage():

	msg = """reproject_image -t TEMPLATE -o OUTFILE [-m MASKFILE] [-e] IMAGEFILE
	
-t TEMPLATE           Template Image In WCS Frame To Transform To
-o OUTFILE            Name of Output File
-m MASKFILE           Name of Reprojection Footprint Mask File
-e                    Use Flux Conserving Reprojection (Slow)
-h                    This Message
"""
	print(msg)
	exit(0)

def main():

	opts, args = getopt.getopt(sys.argv[1:], 't:o:m:eh')
	opts = dict(opts)

	if '-h' in opts:
		usage()

	assert '-t' in opts, "Please Provide a Template Image (-t TEMPLATE)"
	assert len(args), "Please Provide Image(s) to Reproject"
	assert '-o' in opts, "Please Provide and Output Filename (-o OUT)"

	template = opts['-t']
	outfile = opts['-o']
	imagename = args[0]
	is_exact = '-e' in opts

	image, mask = reproject(template, imagename, exact=is_exact)
	write_out(image, outfile)
	
	if '-m' in opts:
		maskfile = opts['-m']
		write_out(mask, maskfile)
	
if __name__ == '__main__':

	main()	


