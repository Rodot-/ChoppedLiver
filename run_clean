#!/usr/bin/env bash

#First, let's set up some default args

RAWDIR=. # This will be our default dir for our original (ro) data files
OBSFILE=obs_0.dat # a test file containing the file locations of images in a field
BASEDIR=obs0_data # the data directory we'll be working with
TEMPLATE= # template image for alignment
# next, we'll impliment a command line interface

while [ "$1" != "" ]; do
	case $1 in
		-b | --basedir )	shift
							BASEDIR=$1
							;;
		-f | --obsfile )	shift
							OBSFILE=$1
							;;
		-r | --rawdir )		shift
							RAWDIR=$1
							;;			
		-t | --template ) 	shift
							TEMPLATE=$1
							;;
		* )					exit 1
	esac
	shift
done

# Now we can setup some directories

FOOTPRINTDIR=$BASEDIR/footprints # a place to store our reprojection footprint masks
MASKDIR=$BASEDIR/masks # a place to store our cosmic ray removal masks
TEMPDIR=$BASEDIR/temp # a temp dir for intermediate steps
CORRECTEDDIR=$BASEDIR/corrected # a directory to put our completed, corrected images
SUBDIR=$BASEDIR/sub
CROPDIR=$BASEDIR/crop
RESAMPLEDIR=$BASEDIR/resample

# Make all of our directories if they don't already exist
DIRS=($FOOTPRINTDIR $MASKDIR $TEMPDIR $CORRECTEDDIR $SUBDIR $CROPDIR $RESAMPLEDIR)
for DIR in "${DIRS[@]}"; do
	if [ ! -d $DIR ]; then
		echo "Making Directory $DIR"
		mkdir -p $DIR
	fi
done

# make sure we have a template image, if not, get the first one
if [ -z "$TEMPLATE" ]; then
	TEMPLATE="$RAWDIR/$(cat $OBSFILE | head -n 1)" # can be set
	TEMPLATE="$RESAMPLEDIR/${TEMPLATE##*/}"
fi

OBJECTS="$(cat $OBSFILE)" # get the locations of all of our objects

RAW_FILES=$(for image in $OBJECTS; do echo "$RAWDIR/$image"; done)

# do good WCS projection with swarp (make sure you've got a good default config)
swarp $RAW_FILES -RESAMPLE_DIR $RESAMPLEDIR -COMBINE N

for image in $OBJECTS
do
	image="$RAWDIR/$image" # set the relative location of the image file
	if [ -f $image ]; then
		BASENAME=${image##*/} # basename of raw image
		IMAGENAME=${BASENAME%%.fits} # imagename without extension
		FOOTPRINT="$FOOTPRINTDIR/$BASENAME"
		MASK="$MASKDIR/$BASENAME"
		OUTFILE="$CORRECTEDDIR/${IMAGENAME}.fits"
		RESAMPLED="$RESAMPLEDIR/$BASENAME"

		echo "  $IMAGENAME"; # imagename

		# perform projection
		./reproject_image -t $TEMPLATE -o "$TEMPDIR/$BASENAME" -m "$FOOTPRINT" "$RESAMPLED"

		# get rid of cosmics
		./remove_cosmics -o "$OUTFILE" -m "$MASK" -f "$FOOTPRINT" "$TEMPDIR/$BASENAME"

	fi
done

# find the area containing data for all images
echo "Generating Master Footprint"
COMMONMASK="$FOOTPRINTDIR/${BASEDIR}.fits"
./master_crop -o "$COMMONMASK" $FOOTPRINTDIR/h_e*.fits

echo "Applying Master Footprint"
# apply the common mask to the crop dir
./apply_square_mask -o "$CROPDIR" -m "$COMMONMASK" -s crop $CORRECTEDDIR/*.fits

# Model the PSF using Gemseeing to get a better SEEING value
./model_psf -g -v $CROPDIR/*.fits;

# calculate some stats and parameters and add them to the headers
echo "Calculating Stats"
./get_stats $CROPDIR/*.fits

# now we'll run hotpants to do image subtraction
#for image in $OBJECTS
#do
#	image="$RAWDIR/$image" # set the relative location of the image file
#	if [ -f $image ]; then
#		BASENAME=${image##*/} # basename of raw image
#		IMAGENAME=${BASENAME%%.fits} # imagename without extension
#		SUBFILE="$SUBDIR/${IMAGENAME}.fits"
#
#		/mnt/home/obrie278/OpticalReduction/hotpants/hotpants -inim "$CROPDIR/${IMAGENAME}.fits" -tmplim "$CROPDIR/${TEMPLATE##*/}" -outim $SUBFILE
#
#
#		echo "Done"
#	fi
#done


